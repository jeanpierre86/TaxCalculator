// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaxCalculator.Infrastructure.DatabaseContext;

#nullable disable

namespace TaxCalculator.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230623220046_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TaxCalculator.Core.Domain.Entities.FlatRate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateLastModified")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18, 4)");

                    b.HasKey("Id");

                    b.ToTable("FlatRates");

                    b.HasData(
                        new
                        {
                            Id = new Guid("435112d1-6a53-41e4-b001-5162e5b3fb3a"),
                            Active = true,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateLastModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rate = 0.175m
                        });
                });

            modelBuilder.Entity("TaxCalculator.Core.Domain.Entities.FlatValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateLastModified")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FlatAmountForAnnualIncomeExceedingMax")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("MaxAnnualIncome")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("RateForAnnualIncomeLessThanMax")
                        .HasColumnType("decimal(18, 4)");

                    b.HasKey("Id");

                    b.ToTable("FlatValues");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a806952a-ebf5-4b0e-ac54-e07b2a8c1411"),
                            Active = true,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateLastModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FlatAmountForAnnualIncomeExceedingMax = 10000m,
                            MaxAnnualIncome = 200000m,
                            RateForAnnualIncomeLessThanMax = 0.05m
                        });
                });

            modelBuilder.Entity("TaxCalculator.Core.Domain.Entities.PostalCodeCalculationType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CalculationType")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateLastModified")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("PostalCodeCalculationTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b11418b1-fa83-49c3-b508-d955306bc4dc"),
                            Active = true,
                            CalculationType = 0,
                            Code = "7441",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateLastModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("bdf6175c-9076-457d-bc45-a75c82adcc03"),
                            Active = true,
                            CalculationType = 1,
                            Code = "A100",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateLastModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("31afe152-c9ae-4238-971b-93b0fcd0dfd6"),
                            Active = true,
                            CalculationType = 2,
                            Code = "7000",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateLastModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6f95a24f-58c8-41a3-95ae-764b6e3b1bcb"),
                            Active = true,
                            CalculationType = 0,
                            Code = "1000",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateLastModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("TaxCalculator.Core.Domain.Entities.ProgressiveRate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("AnnualIncomeFrom")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("AnnualIncomeTo")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateLastModified")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18, 4)");

                    b.HasKey("Id");

                    b.ToTable("ProgressiveRates");

                    b.HasData(
                        new
                        {
                            Id = new Guid("78ad321f-f881-42e7-8729-1cf415fe0127"),
                            Active = true,
                            AnnualIncomeFrom = 0m,
                            AnnualIncomeTo = 8350m,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateLastModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rate = 0.1m
                        },
                        new
                        {
                            Id = new Guid("4dce90a9-2977-48b2-aae2-e6bab1a5182d"),
                            Active = true,
                            AnnualIncomeFrom = 8351m,
                            AnnualIncomeTo = 33950m,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateLastModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rate = 0.15m
                        },
                        new
                        {
                            Id = new Guid("499e4639-08f3-40ae-a570-85e37c87dfbc"),
                            Active = true,
                            AnnualIncomeFrom = 33951m,
                            AnnualIncomeTo = 82250m,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateLastModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rate = 0.25m
                        },
                        new
                        {
                            Id = new Guid("6d5849dd-58f3-4cd3-833e-9a6411ef917f"),
                            Active = true,
                            AnnualIncomeFrom = 82251m,
                            AnnualIncomeTo = 171550m,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateLastModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rate = 0.28m
                        },
                        new
                        {
                            Id = new Guid("cba7eaf4-ce06-4e95-9d11-c869c745e932"),
                            Active = true,
                            AnnualIncomeFrom = 171551m,
                            AnnualIncomeTo = 372950m,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateLastModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rate = 0.33m
                        },
                        new
                        {
                            Id = new Guid("0f7b7bed-b541-4e0d-8ffd-985f0af27fe2"),
                            Active = true,
                            AnnualIncomeFrom = 372951m,
                            AnnualIncomeTo = 999999999999999.99m,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateLastModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rate = 0.35m
                        });
                });

            modelBuilder.Entity("TaxCalculator.Core.Domain.Entities.TaxCalculationResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("AnnualIncome")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateLastModified")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("IncomeTax")
                        .HasColumnType("decimal(18, 8)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TaxCalculationResults");
                });
#pragma warning restore 612, 618
        }
    }
}
